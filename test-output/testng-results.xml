<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="18" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-14T23:47:19 EST" name="Suite" finished-at="2023-12-14T23:50:07 EST" duration-ms="167659">
    <groups>
    </groups>
    <test started-at="2023-12-14T23:47:19 EST" name="Test" finished-at="2023-12-14T23:50:07 EST" duration-ms="167659">
      <class name="com.qa.testCasesTn.LoginTest">
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:19 EST" name="loginSetup" finished-at="2023-12-14T23:48:24 EST" duration-ms="4703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:24 EST" name="verifyLoginWithValidCredentials" data-provider="LN" finished-at="2023-12-14T23:48:25 EST" duration-ms="1162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mashrufashanjia100@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mashrufa@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:25 EST" name="tearDown" finished-at="2023-12-14T23:48:25 EST" duration-ms="116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:25 EST" name="loginSetup" finished-at="2023-12-14T23:48:30 EST" duration-ms="4712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:30 EST" name="verifyLoginWithValidCredentials" data-provider="LN" finished-at="2023-12-14T23:48:31 EST" duration-ms="1116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mashrufashanjia1000@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mashrufa@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:31 EST" name="tearDown" finished-at="2023-12-14T23:48:31 EST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:31 EST" name="loginSetup" finished-at="2023-12-14T23:48:36 EST" duration-ms="4722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:36 EST" name="verifyLoginWithValidCredentials" data-provider="LN" finished-at="2023-12-14T23:48:37 EST" duration-ms="916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mashrufashanjia10000@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mashrufa@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:37 EST" name="tearDown" finished-at="2023-12-14T23:48:37 EST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:37 EST" name="loginSetup" finished-at="2023-12-14T23:48:42 EST" duration-ms="5493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:42 EST" name="verifyLoginWithValidCredentials" data-provider="LN" finished-at="2023-12-14T23:48:43 EST" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mashrufashanjia100000@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mashrufa@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:43 EST" name="tearDown" finished-at="2023-12-14T23:48:44 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:44 EST" name="loginSetup" finished-at="2023-12-14T23:48:49 EST" duration-ms="5096" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:49 EST" name="verifyLoginWithValidCredentials" data-provider="LN" finished-at="2023-12-14T23:48:50 EST" duration-ms="902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mashrufashanjia1000000@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mashrufa@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:50 EST" name="tearDown" finished-at="2023-12-14T23:48:50 EST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:50 EST" name="loginSetup" finished-at="2023-12-14T23:48:54 EST" duration-ms="4557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:54 EST" name="verifyLoginWithInvalidCredentials" finished-at="2023-12-14T23:48:55 EST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:55 EST" name="tearDown" finished-at="2023-12-14T23:48:55 EST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:48:55 EST" name="loginSetup" finished-at="2023-12-14T23:49:00 EST" duration-ms="4887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithValidEmailInvalidPassword()[pri:3, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:00 EST" name="verifyLoginWithValidEmailInvalidPassword" finished-at="2023-12-14T23:49:00 EST" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:00 EST" name="tearDown" finished-at="2023-12-14T23:49:01 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:01 EST" name="loginSetup" finished-at="2023-12-14T23:49:06 EST" duration-ms="5355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithInvalidEmailValidPassword()[pri:4, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:06 EST" name="verifyLoginWithInvalidEmailValidPassword" finished-at="2023-12-14T23:49:07 EST" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:07 EST" name="tearDown" finished-at="2023-12-14T23:49:07 EST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="loginSetup()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:07 EST" name="loginSetup" finished-at="2023-12-14T23:49:12 EST" duration-ms="5418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginSetup -->
        <test-method signature="verifyLoginWithNoCredentials()[pri:5, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:12 EST" name="verifyLoginWithNoCredentials" finished-at="2023-12-14T23:49:13 EST" duration-ms="550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithNoCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.LoginTest@1cf6d1be]" started-at="2023-12-14T23:49:13 EST" name="tearDown" finished-at="2023-12-14T23:49:13 EST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testCasesTn.LoginTest -->
      <class name="com.qa.testCasesTn.SearchProductTest">
        <test-method is-config="true" signature="registerSetup()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:33 EST" name="registerSetup" finished-at="2023-12-14T23:47:37 EST" duration-ms="4345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetup -->
        <test-method signature="verifySearchWithValidProduct()[pri:1, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:37 EST" name="verifySearchWithValidProduct" finished-at="2023-12-14T23:47:38 EST" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:38 EST" name="tearDown" finished-at="2023-12-14T23:47:38 EST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="registerSetup()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:38 EST" name="registerSetup" finished-at="2023-12-14T23:47:42 EST" duration-ms="3987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetup -->
        <test-method signature="verifySearchWithInvalidProduct()[pri:2, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:42 EST" name="verifySearchWithInvalidProduct" finished-at="2023-12-14T23:47:42 EST" duration-ms="529" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:42 EST" name="tearDown" finished-at="2023-12-14T23:47:43 EST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="registerSetup()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:43 EST" name="registerSetup" finished-at="2023-12-14T23:47:47 EST" duration-ms="4160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerSetup -->
        <test-method signature="verifySearchWithNoProduct()[pri:3, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:47 EST" name="verifySearchWithNoProduct" finished-at="2023-12-14T23:47:47 EST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithNoProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.SearchProductTest@7161d8d1]" started-at="2023-12-14T23:47:47 EST" name="tearDown" finished-at="2023-12-14T23:47:47 EST" duration-ms="97" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testCasesTn.SearchProductTest -->
      <class name="com.qa.testCasesTn.CheckOutTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:13 EST" name="setup" finished-at="2023-12-14T23:49:23 EST" duration-ms="10562" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkoutAsNewUser()[pri:1, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:23 EST" name="checkoutAsNewUser" finished-at="2023-12-14T23:49:24 EST" duration-ms="285" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.qa.testCasesTn.CheckOutTest.checkoutAsNewUser(CheckOutTest.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkoutAsNewUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:24 EST" name="tearDown" finished-at="2023-12-14T23:49:24 EST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:24 EST" name="setup" finished-at="2023-12-14T23:49:42 EST" duration-ms="18368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkOutAsGuestUser()[pri:2, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:42 EST" name="checkOutAsGuestUser" finished-at="2023-12-14T23:49:55 EST" duration-ms="12465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOutAsGuestUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:55 EST" name="tearDown" finished-at="2023-12-14T23:49:55 EST" duration-ms="151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:49:55 EST" name="setup" finished-at="2023-12-14T23:50:07 EST" duration-ms="11667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkOutAsExistingUser()[pri:3, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:50:07 EST" name="checkOutAsExistingUser" finished-at="2023-12-14T23:50:07 EST" duration-ms="342" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.qa.testCasesTn.CheckOutTest.checkOutAsExistingUser(CheckOutTest.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOutAsExistingUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.CheckOutTest@663c9e7a]" started-at="2023-12-14T23:50:07 EST" name="tearDown" finished-at="2023-12-14T23:50:07 EST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testCasesTn.CheckOutTest -->
      <class name="com.qa.testCasesTn.AddtoCartTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.AddtoCartTest@738dc9b]" started-at="2023-12-14T23:47:20 EST" name="setup" finished-at="2023-12-14T23:47:24 EST" duration-ms="4638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkingOutValidProduct()[pri:0, instance:com.qa.testCasesTn.AddtoCartTest@738dc9b]" started-at="2023-12-14T23:47:24 EST" name="checkingOutValidProduct" finished-at="2023-12-14T23:47:32 EST" duration-ms="8011" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.qa.testCasesTn.AddtoCartTest.checkingOutValidProduct(AddtoCartTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkingOutValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.AddtoCartTest@738dc9b]" started-at="2023-12-14T23:47:33 EST" name="tearDown" finished-at="2023-12-14T23:47:33 EST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testCasesTn.AddtoCartTest -->
      <class name="com.qa.testCasesTn.RegisterTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:47:47 EST" name="setup" finished-at="2023-12-14T23:47:53 EST" duration-ms="5925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisterWithMandatoryFields()[pri:1, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:47:53 EST" name="verifyingRegisterWithMandatoryFields" finished-at="2023-12-14T23:47:54 EST" duration-ms="1299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisterWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:47:54 EST" name="tearDown" finished-at="2023-12-14T23:47:55 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:47:55 EST" name="setup" finished-at="2023-12-14T23:47:59 EST" duration-ms="4818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisterWithAllFields()[pri:2, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:47:59 EST" name="verifyingRegisterWithAllFields" finished-at="2023-12-14T23:48:01 EST" duration-ms="1173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisterWithAllFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:01 EST" name="tearDown" finished-at="2023-12-14T23:48:01 EST" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:01 EST" name="setup" finished-at="2023-12-14T23:48:06 EST" duration-ms="4971" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisterWithExistingEmail()[pri:3, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:06 EST" name="verifyingRegisterWithExistingEmail" finished-at="2023-12-14T23:48:07 EST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisterWithExistingEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:07 EST" name="tearDown" finished-at="2023-12-14T23:48:07 EST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:07 EST" name="setup" finished-at="2023-12-14T23:48:12 EST" duration-ms="4955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisterWithMismatchPassword()[pri:4, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:12 EST" name="verifyingRegisterWithMismatchPassword" finished-at="2023-12-14T23:48:12 EST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisterWithMismatchPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:12 EST" name="tearDown" finished-at="2023-12-14T23:48:13 EST" duration-ms="109" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:13 EST" name="setup" finished-at="2023-12-14T23:48:18 EST" duration-ms="5568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyingRegisterWithNoFields()[pri:5, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:18 EST" name="verifyingRegisterWithNoFields" finished-at="2023-12-14T23:48:19 EST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyingRegisterWithNoFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.qa.testCasesTn.RegisterTest@74e28667]" started-at="2023-12-14T23:48:19 EST" name="tearDown" finished-at="2023-12-14T23:48:19 EST" duration-ms="112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testCasesTn.RegisterTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
